version: "3"

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    expose: 
      - "8000"
    volumes:
      - .:/app
    stdin_open: true
    env_file:
      - .env

    depends_on:
      - pgdb
      - mongodb


  pgdb:
      image: postgres:15
      restart: always
      env_file:
        - .env.postgres

      volumes:
          - pgdb-data:/var/lib/postgresql/data


  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
      GUNICORN_ACCESS_LOGFILE: '/dev/null'
    ports:
      - "5055:80"
    logging:
      driver: none
      
  
  mongodb:
      image: mongo:7
      restart: always
      ports:
        - '27017:27017'
      volumes:
        - mongodb-data:/var/lib/mongodb/data


  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - rabbitmq-data:/var/lib/rabbitmq
        - rabbitmq-log:/var/log/rabbitmq
    # networks:
    #     - rabbitmq_go_net
    # if you want to put network: https://stackoverflow.com/questions/71033283/using-pika-how-to-connect-to-rabbitmq-running-in-docker-started-with-docker-co


volumes:
  pgdb-data:
  mongodb-data:
  rabbitmq-data:
  rabbitmq-log:


# networks:
#   rabbitmq_go_net:
#     driver: bridge
  
# networks:
#   db_network: